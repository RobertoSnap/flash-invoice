/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { Invoice } from "./Invoice";

export class InvoiceFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<Invoice> {
    return super.deploy(overrides) as Promise<Invoice>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): Invoice {
    return super.attach(address) as Invoice;
  }
  connect(signer: Signer): InvoiceFactory {
    return super.connect(signer) as InvoiceFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Invoice {
    return new Contract(address, _abi, signerOrProvider) as Invoice;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "get_date_of_sale",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060778061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063cf5f815f14602d575b600080fd5b60336045565b60408051918252519081900360200190f35b6000549056fea165627a7a7230582080d7a24ff71a41de30701a41db207a73f04d0cc338c0f3406fcf104bd2991aad0029";
